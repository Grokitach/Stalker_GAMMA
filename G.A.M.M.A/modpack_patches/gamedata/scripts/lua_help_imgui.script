-- Basic ImGui scripting guide: https://igigog.github.io/anomaly-modding-book/tutorials/scripting/imgui.html
--[[
	namespace ImGui
	{
		string GetVersion()
		bool, bool Begin(string, bool, ImGuiWindowFlags)
		void End()
		
		bool IsWindowAppearing()
		bool IsWindowCollapsed()
		bool IsWindowFocused(ImGuiFocusedFlags)
		bool IsWindowHovered(ImGuiHoveredFlags)
		
		number GetWindowDpiScale()
		vector2 GetWindowPos()
		vector2 GetWindowSize()
		number GetWindowWidth()
		number GetWindowHeight()
		
		void SetNextWindowPos(vector2, ImGuiCond, vector2)
		void SetNextWindowSize(vector2, ImGuiCond)
		void SetNextWindowSizeConstraints(vector2, vector2)
		void SetNextWindowContentSize(vector2)
		void SetNextWindowCollapsed(bool, ImGuiCond)
		void SetNextWindowFocus()
		void SetNextWindowScroll(vector2)
		void SetNextWindowBgAlpha(number)
		void SetWindowPos(vector2, ImGuiCond)
		void SetWindowSize(vector2, ImGuiCond)
		void SetWindowCollapsed(bool, ImGuiCond)
		void SetWindowCollapsed(string, bool, ImGuiCond)
		void SetWindowFocus()
		void SetWindowFocus(string)
		
		number GetScrollX()
		number GetScrollY()
		void SetScrollX(number)
		void SetScrollY(number)
		number GetScrollMaxX()
		number GetScrollMaxY()
		void SetScrollHereX(number)
		void SetScrollHereY(number)
		void SetScrollFromPosX(number, number)
		void SetScrollFromPosY(number, number)
		
		void PushStyleColor(ImGuiCol, number)
		void PushStyleColor(ImGuiCol, fcolor)
		void PopStyleColor(number)
		void PushStyleVar(ImGuiStyleVar, number)
		void PushStyleVar(ImGuiStyleVar, vector2)
		void PushStyleVarX(number)
		void PushStyleVarY(number)
		void PopStyleVar(number)
		fcolor GetStyleColor(ImGuiCol)
		
		void PushItemFlag(ImGuiItemFlags, bool)
		void PopItemFlag()
		void PushItemWidth(number)
		void PopItemWidth()
		void SetNextItemWidth(number)
		number CalcItemWidth()
		void PushTextWrapPos(number)
		void PopTextWrapPos()
		
		vector2 GetCursorScreenPos()
		void SetCursorScreenPos(vector2)
		vector2 GetContentRegionAvail()
		vector2 GetCursorPos()
		number GetCursorPosX()
		number GetCursorPosY()
		void SetCursorPos(vector2)
		void SetCursorPosX(number)
		void SetCursorPosY(number)
		vector2 GetCursorStartPos()
		
		void Separator()
		void SameLine(number, number)
		void NewLine()
		void Spacing()
		void Dummy(vector2)
		void Indent(number)
		void Unindent(number)
		
		void BeginGroup()
		void EndGroup()
		
		void AlignTextToFramePadding()
		number GetTextLineHeight()
		number GetTextLineHeightWithSpacing()
		number GetFrameHeight()
		number GetFrameHeightWithSpacing()
		
		void PushID(string)
		void PushID(ImGuiID)
		void PopID()
		ImGuiID GetID(string)
		ImGuiID GetID(number)
		
		void Text(string)
		void TextUnformatted(string)
		void TextColored(fcolor, string)
		void TextDisabled(string)
		void TextWrapped(string)
		bool TextLink(string)
		void TextLinkOpenURL(string, string)
		void LabelText(string, string)
		void Bullet()
		void BulletText(string)
		void SeparatorText(string)
		
		bool Button(string, vector2)
		bool SmallButton(string)
		bool InvisibleButton(string, vector2, ImGuiButtonFlags)
		bool ArrowButton(string, ImGuiDir)
		bool, bool Checkbox(string, bool)
		bool RadioButton(string, bool)
		void ProgressBar(number, vector2, string)
		
		bool BeginCombo(string, string, ImGuiComboFlags)
		void EndCombo()
		
		bool, number DragFloat(string, number, number, number, number, string, ImGuiSliderFlags)
		bool, vector2 DragFloat2(string, vector2, number, number, number, string, ImGuiSliderFlags)
		bool, vector DragFloat3(string, vector, number, number, number, string, ImGuiSliderFlags)
		bool, vector4 DragFloat4(string, vector4, number, number, number, string, ImGuiSliderFlags)
		bool, number, number DragFloatRange2(string, number, number, number, number, number, string, string, ImGuiSliderFlags)
		
		bool, number SliderFloat(string, number, number, number, string, ImGuiSliderFlags)
		bool, vector2 SliderFloat2(string, vector2, number, number, string, ImGuiSliderFlags)
		bool, vector SliderFloat3(string, vector, number, number, string, ImGuiSliderFlags)
		bool, vector4 SliderFloat4(string, vector4, number, number, string, ImGuiSliderFlags)
		bool, number SliderAngle(string, number, number, number, string, ImGuiSliderFlags)
		
		string, bool InputText(string, string, ImGuiInputTextFlags, number)
		string, bool InputTextMultiline(string, string, vector2, ImGuiInputTextFlags, number)
		string, bool InputTextWithHint(string, string, string, ImGuiInputTextFlags, number)
		
		bool, number InputFloat(string, number, number, number, string, ImGuiInputTextFlags)
		bool, vector2 InputFloat2(string, vector2, string, ImGuiInputTextFlags)
		bool, vector InputFloat3(string, vector, string, ImGuiInputTextFlags)
		bool, vector4 InputFloat4(string, vector4, string, ImGuiInputTextFlags)
		
		bool, fcolor ColorEdit3(string, fcolor, ImGuiColorEditFlags)
		bool, fcolor ColorEdit4(string, fcolor, ImGuiColorEditFlags)
		bool, fcolor ColorPicker3(string, fcolor, ImGuiColorEditFlags)
		bool, fcolor ColorPicker4(string, fcolor, ImGuiColorEditFlags)
		bool, fcolor ColorButton(string, fcolor, ImGuiColorEditFlags, vector2)
		
		bool TreeNode(string)
		bool TreeNodeEx(string, ImGuiTreeNodeFlags)
		void TreePush(string)
		void TreePop()
		number GetTreeNodeToLabelSpacing()
		bool CollapsingHeader(string, ImGuiTreeNodeFlags)
		bool, bool CollapsingHeader(string, bool, ImGuiTreeNodeFlags)
		void SetNextItemOpen(bool, ImGuiCond)
		
		bool BeginListBox(string, vector2)
		void EndListBox()
		bool Selectable(string, bool, ImGuiSelectableFlags, vector2)
		
		bool BeginMenuBar()
		void EndMenuBar()
		bool BeginMenu(string, bool)
		void EndMenu()
		bool, bool MenuItem(string, string, bool, bool)
		
		bool BeginTooltip()
		void EndTooltip()
		void SetTooltip(string)
		bool BeginItemTooltip()
		void SetItemTooltip()
		void HelpMarker(string, bool, number, number)
		
		bool BeginPopup(string, ImGuiWindowFlags)
		bool, bool BeginPopupModal(string, bool, ImGuiWindowFlags)
		void EndPopup()
		void OpenPopup(string, ImGuiPopupFlags)
		void OpenPopup(ImGuiID, ImGuiPopupFlags)
		void OpenPopupOnItemClick(string, ImGuiPopupFlags)
		void CloseCurrentPopup()
		bool BeginPopupContextItem(string, ImGuiPopupFlags)
		bool BeginPopupContextWindow(string, ImGuiPopupFlags)
		bool BeginPopupContextVoid(string, ImGuiPopupFlags)
		bool IsPopupOpen(string, ImGuiPopupFlags)
		
		bool BeginTable(string, number, ImGuiTableFlags, vector2, number)
		void EndTable()
		void TableNextRow(ImGuiTableRowFlags, number)
		bool TableNextColumn()
		bool TableSetColumnIndex(number)
		void TableSetupColumn(string, ImGuiTableColumnFlags, number, ImGuiID)
		void TableSetupScrollFreeze(number, number)
		void TableHeader(string)
		void TableHeadersRow()
		void TableAngledHeadersRow()
		number TableGetColumnCount()
		number TableGetColumnIndex()
		number TableGetRowIndex()
		string TableGetColumnName(number)
		ImGuiTableColumnFlags TableGetColumnFlags(number)
		void TableAngledHeadersRow()
		number TableGetHoveredColumn()
		void TableSetBgColor(ImGuiTableBgTarget, fcolor, number)
		
		bool BeginTabBar(string, ImGuiTabBarFlags)
		void EndTabBar()
		bool, bool BeginTabItem(string, bool, ImGuiTabItemFlags)
		void EndTabItem()
		bool TabItemButton(string, ImGuiTabItemFlags)
		void SetTabItemClosed(string)
		
		void BeginDisabled(bool)
		void EndDisabled()
		
		void PushClipRect(vector2, vector2, bool)
		void PopClipRect()
		
		void SetItemDefaultFocus()
		void SetKeyboardFocusHere(number)
		void SetNavCursorVisible(bool)
		void SetNextItemAllowOverlap()
		
		bool IsItemHovered(ImGuiHoveredFlags)
		bool IsItemActive()
		bool IsItemFocused()
		bool IsItemClicked(ImGuiMouseButton)
		bool IsItemVisible()
		bool IsItemEdited()
		bool IsItemActivated()
		bool IsItemDeactivated()
		bool IsItemDeactivatedAfterEdit()
		bool IsItemToggledOpen()
		bool IsAnyItemHovered()
		bool IsAnyItemActive()
		bool IsAnyItemFocused()
		ImGuiID GetItemID()
		vector2 GetItemRectMin()
		vector2 GetItemRectMax()
		vector2 GetItemRectSize()
		
		bool IsKeyDown(ImGuiKey)
		bool IsKeyPressed(ImGuiKey, bool)
		bool IsKeyReleased(ImGuiKey)
		bool IsKeyChordPressed(ImGuiKey + ImGuiMod)
		number GetKeyPressedAmount(ImGuiKey, number, number)
		string GetKeyName(ImGuiKey)
		void SetNextFrameWantCaptureKeyboard(bool)
		
		bool Shortcut(ImGuiKey + ImGuiMod, ImGuiInputFlags)
		void SetNextItemShortcut(ImGuiKey + ImGuiMod, ImGuiInputFlags)
		
		void SetItemKeyOwner(ImGuiKey)
		void SetItemKeyOwner(ImGuiKey, ImGuiInputFlags)
		
		vector2 CalcTextSize(string, bool, number)
		
		bool IsMouseDown(ImGuiMouseButton)
		bool IsMouseClicked(ImGuiMouseButton, bool)
		bool IsMouseReleased(ImGuiMouseButton)
		bool IsMouseDoubleClicked(ImGuiMouseButton)
		bool IsMouseReleasedWithDelay(ImGuiMouseButton, number)
		number GetMouseClickedCount(ImGuiMouseButton)
		bool IsMouseHoveringRect(vector2, vector2, bool)
		bool IsMousePosValid(vector2)
		bool IsAnyMouseDown()
		vector2 GetMousePos()
		vector2 GetMousePosOnOpeningCurrentPopup()
		bool IsMouseDragging(ImGuiMouseButton, number)
		vector2 GetMouseDragDelta(ImGuiMouseButton, number)
		void ResetMouseDragDelta(ImGuiMouseButton)
		void SetNextFrameWantCaptureMouse(bool)
		
		void PushFont(string)
		void PopFont()
		number GetFontSize()
		
		string GetClipboardText()
		void SetClipboardText(string)
	};
	
	enum ImGuiCond {
		Always,
		Once,
		FirstUseEver,
		Appearing,
	};

	enum ImGuiDir {
		Left,
		Right,
		Up,
		Down,
	};

	enum ImGuiWindowFlags {
		NoTitleBar,
		NoResize,
		NoMove,
		NoScrollbar,
		NoScrollWithMouse,
		NoCollapse,
		AlwaysAutoResize,
		NoBackground,
		NoSavedSettings,
		NoMouseInputs,
		MenuBar,
		HorizontalScrollbar,
		NoFocusOnAppearing,
		NoBringToFrontOnFocus,
		AlwaysVerticalScrollbar,
		AlwaysHorizontalScrollbar,
		NoNavInputs,
		NoNavFocus,
		UnsavedDocument,
		NoDocking,
		NoNav,
		NoDecoration,
		NoInputs,
	};

	enum ImGuiItemFlags {
		NoTabStop,
		NoNav,
		NoNavDefaultFocus,
		ButtonRepeat,
		AutoClosePopups,
		AllowDuplicateId,
	};

	enum ImGuiSelectableFlags {
		NoAutoClosePopups,
		SpanAllColumns,
		AllowDoubleClick,
		Disabled,
		AllowOverlap,
		Highlight,
	};

	enum ImGuiInputTextFlags {
		CharsDecimal,
		CharsHexadecimal,
		CharsScientific,
		CharsUppercase,
		CharsNoBlank,
		AllowTabInput,
		EnterReturnsTrue,
		EscapeClearsAll,
		CtrlEnterForNewLine,
		ReadOnly,
		Password,
		AlwaysOverwrite,
		AutoSelectAll,
		ParseEmptyRefVal,
		DisplayEmptyRefVal,
		NoHorizontalScroll,
		NoUndoRedo,
		ElideLeft,
		CallbackCompletion,
		CallbackHistory,
		CallbackAlways,
		CallbackCharFilter,
		CallbackResize,
		CallbackEdit,
	};

	enum ImGuiTreeNodeFlags {
		Selected,
		Framed,
		AllowOverlap,
		NoTreePushOnOpen,
		NoAutoOpenOnLog,
		DefaultOpen,
		OpenOnDoubleClick,
		OpenOnArrow,
		Leaf,
		Bullet,
		FramePadding,
		SpanAvailWidth,
		SpanFullWidth,
		SpanLabelWidth,
		SpanAllColumns,
		LabelSpanAllColumns,
		NavLeftJumpsBackHere,
		CollapsingHeader,
	};

	enum ImGuiPopupFlags {
		MouseButtonLeft,
		MouseButtonRight,
		MouseButtonMiddle,
		NoReopen,
		NoOpenOverExistingPopup,
		NoOpenOverItems,
		AnyPopupId,
		AnyPopupLevel,
		AnyPopup,
	};

	enum ImGuiTableRowFlags {
		Headers,
	};

	enum ImGuiTableBgTarget {
		RowBg0,
		RowBg1,
		CellBg,
	};

	enum ImGuiTableFlags {
		Resizable,
		Reorderable,
		Hideable,
		Sortable,
		NoSavedSettings,
		ContextMenuInBody,
		RowBg,
		BordersInnerH,
		BordersOuterH,
		BordersInnerV,
		BordersOuterV,
		BordersH,
		BordersV,
		BordersInner,
		BordersOuter,
		Borders,
		NoBordersInBody,
		NoBordersInBodyUntilResize,
		SizingFixedFit,
		SizingFixedSame,
		SizingStretchProp,
		SizingStretchSame,
		NoHostExtendX,
		NoHostExtendY,
		NoKeepColumnsVisible,
		PreciseWidths,
		NoClip,
		PadOuterX,
		NoPadOuterX,
		NoPadInnerX,
		ScrollX,
		ScrollY,
		SortMulti,
		SortTristate,
		HighlightHoveredColumn,
	};

	enum ImGuiTableColumnFlags {
		Disabled,
		DefaultHide,
		DefaultSort,
		WidthStretch,
		WidthFixed,
		NoResize,
		NoReorder,
		NoHide,
		NoClip,
		NoSort,
		NoSortAscending,
		NoSortDescending,
		NoHeaderLabel,
		NoHeaderWidth,
		PreferSortAscending,
		PreferSortDescendin,
		IndentEnable,
		IndentDisable,
		AngledHeader,
		IsEnabled,
		IsVisible,
		IsSorted,
		IsHovered,
	};

	enum ImGuiTabBarFlags {
		Disabled,
		DefaultHide,
		DefaultSort,
		WidthStretch,
		WidthFixed,
		NoResize,
		NoReorder,
		NoHide,
		NoClip,
	};

	enum ImGuiTabItemFlags {
		UnsavedDocument,
		SetSelected,
		NoCloseWithMiddleMouseButton,
		NoPushId,
		NoTooltip,
		NoReorder,
		Leading,
		Trailing,
		NoAssumedClosure,
	};

	enum ImGuiHoveredFlags {
		ChildWindows,
		RootWindow,
		AnyWindow,
		NoPopupHierarchy,
		DockHierarchy,
		AllowWhenBlockedByPopup,
		AllowWhenBlockedByActiveItem,
		AllowWhenOverlappedByItem,
		AllowWhenOverlappedByWindow,
		AllowWhenDisabled,
		NoNavOverride,
		AllowWhenOverlapped,
		RectOnly,
		RootAndChildWindows,
		ForTooltip,
		Stationary,
		_DelayNone,
		DelayShort,
		DelayNormal,
		NoSharedDelay,
	};

	enum ImGuiCol {
		Text,
		TextDisabled,
		WindowBg,
		ChildBg,
		PopupBg,
		Border,
		BorderShadow,
		FrameBg,
		FrameBgHovered,
		FrameBgActive,
		TitleBg,
		TitleBgActive,
		TitleBgCollapsed,
		MenuBarBg,
		ScrollbarBg,
		ScrollbarGrab,
		ScrollbarGrabHovered,
		ScrollbarGrabActive,
		CheckMark,
		SliderGrab,
		SliderGrabActive,
		Button,
		ButtonHovered,
		ButtonActive,
		Header,
		HeaderHovered,
		HeaderActive,
		Separator,
		SeparatorHovered,
		SeparatorActive,
		ResizeGrip,
		ResizeGripHovered,
		ResizeGripActive,
		TabHovered,
		Tab,
		TabSelected,
		TabSelectedOverline,
		TabDimmed,
		TabDimmedSelected,
		TabDimmedSelectedOverline,
		DockingPreview,
		DockingEmptyBg,
		PlotLines,
		PlotLinesHovered,
		PlotHistogram,
		PlotHistogramHovered,
		TableHeaderBg,
		TableBorderStrong,
		TableBorderLight,
		TableRowBg,
		TableRowBgAlt,
		TextLink,
		TextSelectedBg,
		DragDropTarget,
		NavCursor,
		NavWindowingHighlight,
		NavWindowingDimBg,
		ModalWindowDimBg,
	};

	enum ImGuiStyleVar {
		Alpha,
		DisabledAlpha,
		WindowPadding,
		WindowRounding,
		WindowBorderSize,
		WindowMinSize,
		WindowTitleAlign,
		ChildRounding,
		ChildBorderSize,
		PopupRounding,
		PopupBorderSize,
		FramePadding,
		FrameRounding,
		FrameBorderSize,
		ItemSpacing,
		ItemInnerSpacing,
		IndentSpacing,
		CellPadding,
		ScrollbarSize,
		ScrollbarRounding,
		GrabMinSize,
		GrabRounding,
		TabRounding,
		TabBorderSize,
		TabBarBorderSize,
		TabBarOverlineSize,
		TableAngledHeadersAngle,
		TableAngledHeadersTextAlign,
		ButtonTextAlign,
		SelectableTextAlign,
		SeparatorTextBorderSize,
		SeparatorTextAlign,
		SeparatorTextPadding,
		DockingSeparatorSize,
	};

	enum ImGuiComboFlags {
		PopupAlignLeft,
		HeightSmall,
		HeightRegular,
		HeightLarge,
		HeightLargest,
		NoArrowButton,
		NoPreview,
		WidthFitPreview,
	};

	enum ImGuiSortDirection {
		Ascending,
		Descending,
	};

	enum ImGuiMouseButton {
		Left,
		Right,
		Middle,
	};

	enum ImGuiButtonFlags {
		MouseButtonLeft,
		MouseButtonRight,
		MouseButtonMiddle,
		EnableNav,
	};

	enum ImGuiKey {
		A,
		B,
		C,
		D,
		E,
		F,
		G,
		H,
		I,
		J,
		K,
		L,
		M,
		N,
		O,
		P,
		Q,
		R,
		S,
		T,
		U,
		V,
		W,
		X,
		Y,
		Z,
		_1,
		_2,
		_3,
		_4,
		_5,
		_6,
		_7,
		_8,
		_9,
		_0,
		Enter,
		Escape,
		Backspace,
		Tab,
		Space,
		Minus,
		Equal,
		LeftBracket,
		RightBracket,
		Backslash,
		Semicolon,
		Apostrophe,
		GraveAccent,
		Comma,
		Period,
		Slash,
		CapsLock,
		F1,
		F2,
		F3,
		F4,
		F5,
		F6,
		F7,
		F8,
		F9,
		F10,
		F11,
		F12,
		ScrollLock,
		Pause,
		Insert,
		Home,
		PageUp,
		Delete,
		End,
		PageDown,
		RightArrow,
		LeftArrow,
		DownArrow,
		UpArrow,
		NumLock,
		KeypadDivide,
		KeypadMultiply,
		KeypadSubtract,
		KeypadAdd,
		KeypadEnter,
		Keypad1,
		Keypad2,
		Keypad3,
		Keypad4,
		Keypad5,
		Keypad6,
		Keypad7,
		Keypad8,
		Keypad9,
		Keypad0,
		KeypadDecimal,
		Menu,
		KeypadEqual,
		LeftCtrl,
		LeftShift,
		LeftAlt,
		LeftSuper,
		RightCtrl,
		RightShift,
		RightAlt,
		RightSuper,
	};
	
	enum ImGuiMod {
		Ctrl,
		Shift,
		Alt,
		Super,
	};

	enum ImGuiInputFlags {
		RepeatRateDefault,
		RepeatRateNavMove,
		RepeatRateNavTweak,
		RepeatUntilRelease,
		RepeatUntilKeyModsChange,
		RepeatUntilKeyModsChangeFromNone,
		RepeatUntilOtherKeyPress,
		LockThisFrame,
		LockUntilRelease,
		CondHovered,
		CondActive,
	};

	enum ImGuiColorEditFlags {
		NoAlpha,
		NoPicker,
		NoOptions,
		NoSmallPreview,
		NoInputs,
		NoTooltip,
		NoLabel,
		NoSidePreview,
		NoDragDrop,
		NoBorder,
		AlphaOpaque,
		AlphaNoBg,
		AlphaPreviewHalf,
		AlphaBar,
		HDR,
		DisplayRGB,
		DisplayHSV,
		DisplayHex,
		Uint8,
		Float,
		PickerHueBar,
		PickerHueWheel,
		InputRGB,
		InputHSV,
	};

	enum ImGuiSliderFlags {
		Logarithmic,
		NoRoundToFormat,
		NoInput,
		WrapAround,
		ClampOnInput,
		ClampZeroRange,
		NoSpeedTweaks,
		AlwaysClamp,
	};

	enum ImGuiFocusedFlags {
		ChildWindows,
		RootWindow,
		AnyWindow,
		NoPopupHierarchy,
		DockHierarchy,
		RootAndChildWindows,
	};

	enum ImGuiComboFlags {
		PopupAlignLeft,
		HeightSmall,
		HeightRegular,
		HeightLarge,
		HeightLargest,
		NoArrowButton,
		NoPreview,
		WidthFitPreview,
	};

	enum ImGuiHoveredFlags {
		ChildWindows,
		RootWindow,
		AnyWindow,
		NoPopupHierarchy,
		DockHierarchy,
		AllowWhenBlockedByPopup,
		AllowWhenBlockedByActiveItem,
		AllowWhenOverlappedByItem,
		AllowWhenOverlappedByWindow,
		AllowWhenDisabled,
		NoNavOverride,
		AllowWhenOverlapped,
		RectOnly,
		RootAndChildWindows,
		ForTooltip,
		Stationary,
		DelayNone,
		DelayShort,
		DelayNormal,
		NoSharedDelay,
	};
]]