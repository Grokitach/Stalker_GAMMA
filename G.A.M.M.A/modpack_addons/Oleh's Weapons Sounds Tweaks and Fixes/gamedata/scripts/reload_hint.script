--[[
    Low ammo sounds script
    Author: HarukaSai

    Last edit: 13-08-2022
]]

-- Patched for vanilla ammo system and added MCM settings
-- Added jamming feedback
-- oleh5230, 25.10.24
-- Last edit: 01.08.25

local enabled = false
local volume = 1

function load_mcm_options()
if ui_mcm and grok_casings_sounds_mcm then
        enabled = ui_mcm.get("grok_casings_sounds/enabled_reload_hint")
        volume = ui_mcm.get("grok_casings_sounds/volume_reload_hint") or 1
    end
end

local classes = {
    ["w_pistol"]    = "pistol",
    ["w_shotgun"]   = "shotgun",
    ["w_smg"]       = "smg",
    ["w_rifle"]     = "rifle",
    ["w_sniper"]    = "sniper"
}

function play_hint_sound(sound_path)
    if not sound_path then return end
    sound_to_play = sound_object(sound_path)
    sound_to_play:play(obj, 0, sound_object.s2d)
    sound_to_play.volume = volume
end

function actor_on_weapon_fired(obj, wpn, ammo_elapsed)
    if not enabled then return end

    local sec = wpn and wpn:section()
    if not sec then return end
    local wpn_id = wpn:id()
    local mag_size = 1
    local class = classes[SYS_GetParam(0, sec, "kind")] or "rifle"
    if SYS_GetParam(0, sec, "bullet_bones") then class = "mg" end

    if magazine_binder and magazine_binder.get_data then
        local data = magazine_binder.get_data(wpn_id)
        if data and data.section then
            mag_size = SYS_GetParam(2, data.section, "max_mag_size", 1)
        end
    else
        mag_size = SYS_GetParam(2, sec, "ammo_mag_size")
    end
    if mag_size == 1 then return end

    ammo_elapsed = ammo_elapsed - 1
    if ammo_elapsed == 0 then
        play_hint_sound("reload_hint\\" .. class .. "\\OutofAmmo")
    elseif ammo_elapsed / mag_size <= 0.2 then
        play_hint_sound("reload_hint\\" .. class .. "\\ReloadHint" .. math.random(4))
    end
end

function on_game_start()
    RegisterScriptCallback("actor_on_weapon_fired", actor_on_weapon_fired)
    RegisterScriptCallback("actor_on_weapon_jammed", actor_on_weapon_jammed)
    RegisterScriptCallback("actor_on_weapon_jammed_wpo", actor_on_weapon_jammed)
    RegisterScriptCallback("on_option_change", load_mcm_options)
    load_mcm_options()
end

function actor_on_weapon_jammed(wpn, jam_type)
    --printf("actor_on_weapon_jammed: %s, %s", wpn, jam_type)
    --if jam_type and jam_type == 1 then return end
    local sec = wpn and wpn:section()
    if not sec then return end

    local class = classes[SYS_GetParam(0, sec, "kind")] or "rifle"
    if SYS_GetParam(0, sec, "bullet_bones") then class = "mg" end

    play_hint_sound("reload_hint\\" .. class .. "\\OutofAmmo")
    if camera_reanim_project then game.play_hud_anm("camera_effects\\jammed_crp.anm", 2, 2, 3, false, false) end
end