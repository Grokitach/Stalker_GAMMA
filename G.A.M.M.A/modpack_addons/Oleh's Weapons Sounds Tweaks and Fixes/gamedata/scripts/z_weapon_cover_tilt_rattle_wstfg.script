if eft_rattle and eft_rattle.get_wpn_params and eft_rattle.count and eft_rattle.limit then

	local wct = weapon_cover_tilt
	local sound_add_start = true
	play_sound = weapon_cover_tilt_rattle.play_sound
	function weapon_cover_tilt_rattle.play_sound(dir, wpn, coeff)
		if not wct.get_setting("tilt_rattle") or not wpn then return end

		local class, volume, frequency = eft_rattle.get_wpn_params(wpn) or "w_rifle", 0.5, 1
		local normal_weight = 4
		local weight = wct.get_weapon_weight(wpn)
		if weight < normal_weight then
			frequency = 1.5 - 0.125 * weight
		else
			frequency = math.max(0.77, 1.25 - 0.0625 * weight)
		end

		local sound = sound_object("weapons\\_rattle\\" .. class .. eft_rattle.count)
		sound:play(db.actor, 0, sound_object.s2d)
		sound.volume = volume or 0.5
		sound.frequency = frequency or 1
		eft_rattle.count = eft_rattle.count + 1
		if eft_rattle.count > eft_rattle.limit[class] then eft_rattle.count = 1 end

		--[[
		local sound_add = sound_add_start and SYS_GetParam(0, wpn:section(), "scripted_snd_idle_aim_start") or SYS_GetParam(0, wpn:section(), "scripted_snd_idle_aim_end")
		if sound_add then
			_sound_add = sound_add and str_explode(sound_add, ",")
			sound = sound_object(_sound_add[1])
			sound:play(db.actor, 0, sound_object.s2d)
			sound.volume = 1.2
			sound_add_start = not sound_add_start
		end
		]]
	end
end