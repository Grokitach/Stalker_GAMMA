--[[
    
    /-------------------------< NPE example for G.A.M.M.A. >--------------------------\
    |   Creator:     SERIOUS                                                          |
    |   Mod:         G.A.M.M.A. TUTORIALS                                             |
    |   File:        npe_gamma_tutorial_repair_gun_mcm.script                         |
    |   Description: Example implementation of a G.A.M.M.A. specific tutorial in NPE  |
    |   Created:     03.23.2025                                                       |
    |   Last edit:	 04.13.2025                                                       |
    \---------------------------------------------------------------------------------/
--]]

local broken_gun_found = false
local broken_armor_found = false

local GRS_EVENTS = 
{
    BROKEN_GUN_FOUND = 
    {
        name = "Gun Repair System",
        handler = 
        {
            name        = "on_actor_finding_broken_gun", -- Whatever. Just be unique.
            functors    = 
            {
                {
                    "npe_gamma_tutorial_repair_mcm", -- Name of the `.script` file that contains the function below.
                    "should_trigger_gun_repair_tutorial" -- Function that handles the BROKEN_GUN_FOUND event. If this returns true then the tutorial will trigger.
                }
            }
        }
    },
    BROKEN_ARMOR_FOUND = 
    {
        name = "Armor Repair System",
        handler = 
        {
            name        = "on_actor_finding_broken_armor", -- Whatever. Just be unique.
            functors    = 
            {
                {
                    "npe_gamma_tutorial_repair_mcm", -- Name of the `.script` file that contains the function below.
                    "should_trigger_armor_repair_tutorial" -- Function that handles the BROKEN_GUN_FOUND event. If this returns true then the tutorial will trigger.
                }
            }
        }
    }
}

-- This is basically what's ran every couple of seconds by NPE. When this returns true the tutorial associated will trigger.
function should_trigger_gun_repair_tutorial()
	if broken_gun_found then
		return true
	end
end

-- This isn't necessarily needed. The code here could be contained inside `should_trigger_gun_repair_tutorial` (or whatever method will become trigger for tutorial).
-- It is a good idea though to have 2 methods: 1 light that runs very quick. Another one that's tied to a callback that only runs when something happens.
function is_gun_broken(item)
    if item and IsWeapon(item) and not IsMelee(item) then
        local parts_condition = item_parts.get_parts_con(item)

        if parts_condition then
            for _, value in pairs(parts_condition) do
                if value < 60 then
                    broken_gun_found = true
                end
            end
        end
    end
end

-- This is basically what's ran every couple of seconds by NPE. When this returns true the tutorial associated will trigger.
function should_trigger_armor_repair_tutorial()
	if broken_armor_found then
		return true
	end
end

-- This isn't necessarily needed. The code here could be contained inside `should_trigger_armor_repair_tutorial` (or whatever method will become trigger for tutorial).
-- It is a good idea though to have 2 methods: 1 light that runs very quick. Another one that's tied to a callback that only runs when something happens.
function is_armor_broken(item)
    if item and (IsOutfit(item) or IsHeadgear(item))  then
        local parts_condition = item_parts.get_parts_con(item)

        if parts_condition then
            for _, value in pairs(parts_condition) do
                if value < 60 then
                    broken_armor_found = true
					printf("BROKEN_ARMOR_FOUND")
                end
            end
        end
    end
end


local deck = 
{
    title   = "Repair Tutorial",
    module  = "gamma_tutorial_repair",
    id      = "gamma_tutorial_repair",
    mcm_menu_name = "ui_mcm_npe_module_gamma_tutorial_repair", -- must match the string in the localization file "ui_st_npe_modulename.xml"
    mcm_menu_title = "ui_mcm_npe_module_gamma_tutorial_repair_title", -- must match the string in the localization file "ui_st_npe_modulename.xml"
    mcm_menu_desc = "ui_mcm_npe_module_gamma_tutorial_repair_desc", -- must match the string in the localization file "ui_st_npe_modulename.xml"
    dialog  = npe.DIALOG.UI_TUTORIAL,
    sets    =
    {
        {
            id      = "gun", -- Should be the same as the checkbox id in `on_mcm_load()`
            title   = "ui_mcm_npe_module_gamma_tutorial_repair_gun_title",
            override_cards_count = 5,
            cards   = -- These are the pages of a tutorial. All properties below are required. Otherwise NPE glitches out.
            {
                [1] =
                {
                    title       = "ui_gamma_tutorial_repair_gun_card_01_title",
                    description = "ui_gamma_tutorial_repair_gun_card_01_description",
                    image       = "broken_gun_image"
                },
                [2] =
                {
                    title       = "ui_gamma_tutorial_repair_gun_card_02_title",
                    description = "ui_gamma_tutorial_repair_gun_card_02_description",
                    image       = "part_swap_image"
                },
                [3] =
                {
                    title       = "ui_gamma_tutorial_repair_gun_card_03_title",
                    description = "ui_gamma_tutorial_repair_gun_card_03_description",
                    image       = "part_clean_image"
                },
                [4] =
                {
                    title       = "ui_gamma_tutorial_repair_gun_card_04_title",
                    description = "ui_gamma_tutorial_repair_gun_card_04_description",
                    image       = "part_repairing"
                },
                [5] =
                {
                    title       = "ui_gamma_tutorial_repair_gun_card_05_title",
                    description = "ui_gamma_tutorial_repair_gun_card_05_description",
                    image       = "obtaining_kits_image"
                },
            },
            context = {
                event = GRS_EVENTS.BROKEN_GUN_FOUND,
                delay = 3,
                strict = true,
            },
			pause_game = true,
        },
		
		
		
        {
            id      = "armor", -- Should be the same as the checkbox id in `on_mcm_load()`
            title   = "ui_mcm_npe_module_gamma_tutorial_repair_armor_title",
			override_cards_count = 4,
            cards   = -- These are the pages of a tutorial. All properties below are required. Otherwise NPE glitches out.
            {
                [1] =
                {
                    title       = "ui_gamma_tutorial_repair_armor_card_01_title",
                    description = "ui_gamma_tutorial_repair_armor_card_01_description",
                    image       = "armor_breakdown_image"
                },
                [2] =
                {
                    title       = "ui_gamma_tutorial_repair_armor_card_02_title",
                    description = "ui_gamma_tutorial_repair_armor_card_02_description",
                    image       = "armor_repair_image"
                },
                [3] =
                {
                    title       = "ui_gamma_tutorial_repair_armor_card_03_title",
                    description = "ui_gamma_tutorial_repair_armor_card_03_description",
                    image       = "armor_parts_image"
                },
                [4] =
                {
                    title       = "ui_gamma_tutorial_repair_armor_card_04_title",
                    description = "ui_gamma_tutorial_repair_armor_card_04_description",
                    image       = "armor_maintain_image"
                },
            },
            context = {
                event = GRS_EVENTS.BROKEN_ARMOR_FOUND,
                strict = true,
                delay = 1,
            },
            pause_game = true,
        },
    },
}

function on_mcm_load()
    op = { id = deck.id, sh = true, text = deck.mcm_menu_name, gr = npe_mcm.get_module_menu(deck) }
    return op, "npe_module"
end

function on_game_start()
    if npe then
        npe_director.Register_npe_module(deck)
    end
	RegisterScriptCallback("actor_item_to_ruck", is_gun_broken)
	RegisterScriptCallback("actor_item_to_ruck", is_armor_broken)
end
